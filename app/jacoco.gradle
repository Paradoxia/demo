apply plugin: 'jacoco'

android {
    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }
}

jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("$buildDir/jacocoTestReport")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

def excludes = [
        '**/R.class',
        '**/R$*.class',
        '**/android/databinding/*',
        '**/*$ViewInjector*.*',
        '**/*$ViewBinder*.*',
        '**/BuildConfig.*',
        '**/*Application*.*',
        '**/*Component*.*',
        '**/UiUtils.*',
        '**/*Binding*.*',
        '**/*Retrofit*.*',
        '**/*BR*.*',
        '**/io/realm/*',
        '**/*Rx*.*',
        '**/Manifest*.*',
        '**/*$Lambda$*.*',
        '**/*Module.*',
        '**/*Dagger*.*',
        '**/*MembersInjector*.*',
        '**/*_Provide*Factory*.*',
        '**/*_Factory*.*']

/**
 * Run this task to create a unified coverage report from both junit and androidTest
 */
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: excludes)
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: excludes)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree, kotlinDebugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])

    println("===========================================================")
    println("= After task is done, the report can be located here:     = ")
    println("$buildDir/jacocoTestReport/jacocoTestReport/html/index.html")
    println("===========================================================")

}

task jacocoUnitTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: excludes)
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: excludes)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree, kotlinDebugTree])
    executionData = fileTree(dir: "$project.buildDir", includes: [
            "jacoco/testDebugUnitTest.exec"
    ])
}
