apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

apply plugin: "kotlin-allopen"

apply plugin: "realm-android"

apply plugin: 'com.vanniktech.android.junit.jacoco'

// apply from: 'README.gradle' // https://github.com/androidstarters/kotlin-android-starter/blob/develop/app/build.gradle

// https://github.com/vanniktech/lint-rules/blob/d580e7cbd30603c51e7e01490ed5deeeb6364de5/build.gradle

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "se.paradoxia.pxdemo"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "CONTENT_API_BASE_URL", "\"${ContentApiBaseUrl}\"")
        buildConfigField("String", "IMAGE_BASE_URL", "\"${ImageBaseUrl}\"")
        buildConfigField("String", "FILE_BASE_URL", "\"${FileBaseUrl}\"")
        buildConfigField("String", "FACEBOOK_EXTERNAL_URL", "\"${FBExternalUrl}\"")

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        maxProcessCount 4
        preDexLibraries true
        javaMaxHeapSize "2g"
    }

    sourceSets {
        test.resources.srcDirs += 'src/main/res/raw'
    }

    lintOptions {
        disable 'MissingTranslation'
        textOutput "stdout"
        textReport true
        checkAllWarnings true
        warningsAsErrors true
        showAll true
        explainIssues true
        abortOnError false
        lintConfig file("$projectDir/lint.xml")
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                include '**/*Test.class'
                // configure max heap size of the test JVM
                maxHeapSize = "4096m"
            }
        }
    }

}

allOpen {
    annotation("se.paradoxia.pxdemo.util.AllOpen")
}

kapt {
    useBuildCache = true
}

junitJacoco {
    jacocoVersion = '0.7.2.201409121644' // type String
    ignoreProjects = [] // type String array
    excludes // type String List
    includeNoLocationClasses = false // type boolean
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // So we can emit "null" in observables
    implementation 'com.gojuno.koptional:koptional-rxjava2-extensions:1.3.0'

    // Timber for better logging
    implementation 'com.jakewharton.timber:timber:4.6.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"

    // RecyclerView
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'

    // Dagger
    implementation 'com.google.dagger:dagger-android:2.14.1'
    implementation 'com.google.dagger:dagger-android-support:2.14.1'
    // if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.14.1'
    kapt 'com.google.dagger:dagger-compiler:2.14.1'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // DataBinding
    kapt 'com.android.databinding:compiler:3.0.1'

    // LeakCanary
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    // Disables LeakCanary during junit testing with Robolectric
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    // Support
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation "com.android.support:support-core-utils:27.0.2"
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:1.0.0"
    kapt "android.arch.lifecycle:compiler:1.0.0"

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    testImplementation "android.arch.core:core-testing:1.0.0" // Test helpers for LiveData

    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testImplementation 'org.amshove.kluent:kluent-android:1.34'
    testImplementation 'com.nhaarman:mockito-kotlin:1.5.0'

    testImplementation "org.robolectric:robolectric:3.6.1"
    testImplementation "org.robolectric:shadows-support-v4:3.3.2"

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'



    // Dagger
    testImplementation 'com.google.dagger:dagger-android:2.14.1'
    testImplementation ('com.google.dagger:dagger-android-support:2.14.1') {
        exclude group: 'com.android.support'
    }
    // if you use the support libraries
    kaptTest 'com.google.dagger:dagger-android-processor:2.14.1'
    kaptTest 'com.google.dagger:dagger-compiler:2.14.1'

}
